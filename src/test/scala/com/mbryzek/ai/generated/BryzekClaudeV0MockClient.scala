/**
 * Generated by API Builder - https://www.apibuilder.io
 * Service version: 0.7.61
 * User agent: apibuilder app.apibuilder.io/bryzek/claude/latest/play_2_8_mock_client
 */
package com.bryzek.claude.v0.mock {

  trait Client extends com.bryzek.claude.v0.interfaces.Client {

    val baseUrl: String = "http://mock.localhost"

    override def messages: com.bryzek.claude.v0.Messages = MockMessagesImpl

  }

  object MockMessagesImpl extends MockMessages

  trait MockMessages extends com.bryzek.claude.v0.Messages {

    def post(
      claudeRequest: com.bryzek.claude.v0.models.ClaudeRequest,
      requestHeaders: Seq[(String, String)] = Nil
    )(implicit ec: scala.concurrent.ExecutionContext): scala.concurrent.Future[com.bryzek.claude.v0.models.ClaudeResponse] = scala.concurrent.Future.successful {
      com.bryzek.claude.v0.mock.Factories.makeClaudeResponse()
    }

  }

  object Factories {

    def randomString(length: Int = 24): String = {
      _root_.scala.util.Random.alphanumeric.take(length).mkString
    }

    def makeClaudeContentType(): com.bryzek.claude.v0.models.ClaudeContentType = com.bryzek.claude.v0.models.ClaudeContentType.Text

    def makeClaudeModel(): com.bryzek.claude.v0.models.ClaudeModel = com.bryzek.claude.v0.models.ClaudeModel.ClaudeSonnet420250514

    def makeClaudeRole(): com.bryzek.claude.v0.models.ClaudeRole = com.bryzek.claude.v0.models.ClaudeRole.User

    def makeClaudeStopReason(): com.bryzek.claude.v0.models.ClaudeStopReason = com.bryzek.claude.v0.models.ClaudeStopReason.EndTurn

    def makeClaudeContent(): com.bryzek.claude.v0.models.ClaudeContent = com.bryzek.claude.v0.models.ClaudeContent(
      `type` = com.bryzek.claude.v0.mock.Factories.makeClaudeContentType(),
      text = Factories.randomString(24)
    )

    def makeClaudeError(): com.bryzek.claude.v0.models.ClaudeError = com.bryzek.claude.v0.models.ClaudeError(
      message = Factories.randomString(24),
      raw = None
    )

    def makeClaudeErrorResponse(): com.bryzek.claude.v0.models.ClaudeErrorResponse = com.bryzek.claude.v0.models.ClaudeErrorResponse(
      error = com.bryzek.claude.v0.mock.Factories.makeClaudeError()
    )

    def makeClaudeMessage(): com.bryzek.claude.v0.models.ClaudeMessage = com.bryzek.claude.v0.models.ClaudeMessage(
      role = com.bryzek.claude.v0.mock.Factories.makeClaudeRole(),
      content = Nil
    )

    def makeClaudeRequest(): com.bryzek.claude.v0.models.ClaudeRequest = com.bryzek.claude.v0.models.ClaudeRequest(
      model = com.bryzek.claude.v0.mock.Factories.makeClaudeModel(),
      messages = Nil,
      maxTokens = 1L,
      temperature = None,
      system = None
    )

    def makeClaudeResponse(): com.bryzek.claude.v0.models.ClaudeResponse = com.bryzek.claude.v0.models.ClaudeResponse(
      id = Factories.randomString(24),
      `type` = Factories.randomString(24),
      role = com.bryzek.claude.v0.mock.Factories.makeClaudeRole(),
      content = Nil,
      model = com.bryzek.claude.v0.mock.Factories.makeClaudeModel(),
      stopReason = com.bryzek.claude.v0.mock.Factories.makeClaudeStopReason(),
      stopSequence = None,
      usage = com.bryzek.claude.v0.mock.Factories.makeClaudeUsage()
    )

    def makeClaudeResponseContent(): com.bryzek.claude.v0.models.ClaudeResponseContent = com.bryzek.claude.v0.models.ClaudeResponseContent(
      `type` = com.bryzek.claude.v0.mock.Factories.makeClaudeContentType(),
      text = Factories.randomString(24)
    )

    def makeClaudeUsage(): com.bryzek.claude.v0.models.ClaudeUsage = com.bryzek.claude.v0.models.ClaudeUsage(
      inputTokens = 1L,
      outputTokens = 1L
    )

    def makeMessage(): com.bryzek.claude.v0.models.Message = com.bryzek.claude.v0.models.Message(
      placeholder = None
    )

  }

}